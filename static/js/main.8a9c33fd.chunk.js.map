{"version":3,"sources":["serviceWorker.js","components/Create/create.js","components/Header/header.js","components/Posts/Posts.js","components/Delete/delete.js","components/Post/Post.js","components/Edit/put.js","components/Users/Users.js","components/Router.js","index.js"],"names":["Boolean","window","location","hostname","match","Topost","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","axios","post","state","then","response","alert","catch","error","console","log","title","body","this","id","onSubmit","htmlFor","placeholder","type","onChange","className","Component","Header","header","to","Posts","posts","get","res","data","map","key","pathname","React","Delete","handleDelete","delete","onClick","comments","comment","email","Put","put","disabled","Users","users","user","username","Router","exact","path","component","Post","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8a9c33fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './Create.css';\r\n\r\n\r\nclass Topost extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\ttitle: \"\",\r\n\t\t\tbody: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({[e.target.name]: e.target.value})\r\n\t}\r\n\t\r\n\r\n\t//Submit is sending POST request to jsonplaceholder \r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\taxios.post('https://jsonplaceholder.typicode.com/posts', this.state)\r\n\t\t\t.then(response => {\r\n\t\t\t\talert(\"Post added!\")\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { title, body } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\t\r\n\t\t\t\t<form id=\"form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h1>Create a new post</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<br /> \r\n\t\t\t\t\t\t<input id=\"title\" placeholder=\"Enter title here...\" type=\"text\" name=\"title\" value={title} onChange={this.handleChange}/>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"body\">Body</label>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<textarea id=\"body\" placeholder=\"Enter post's body here...\" type=\"text\" name=\"body\" value={body} onChange={this.handleChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"submit-btn\" type=\"submit\">Add post</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Topost","import React from 'react';\r\nimport './header.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<h1>{props.header}</h1>\r\n\t\t\t\t<div className=\"header-buttons\">\r\n\t\t\t\t\t{props.header !== \"Users\" ?  <Link className=\"header-btn\" to=\"/\">Home</Link> : null}\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Topost from '../Create/create.js'\r\nimport axios from \"axios\";\r\nimport './Posts.css';\r\nimport Header from '../Header/header.js'\r\n\r\n\r\n\r\n\r\nclass Posts extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tposts: []\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Fetching exact user's posts\r\n\tcomponentDidMount() {\r\n\tconst id = this.props.location.state.id;\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\r\n      .then(res => {\r\n           this.setState({\r\n            posts: res.data\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        }\r\n      )\r\n  \t}\t\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"posts\">\r\n\t\t\t\t<Header header=\"Posts\"/>\r\n\t\t\t\t<table className=\"posts-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t \t\t\t \t\t<th>Post ID</th>\r\n\t\t \t\t\t \t\t<th>Post title</th>\r\n\t\t \t\t\t \t\t<th>Post body</th>\r\n\t\t \t\t\t \t</tr>\r\n\t \t\t\t \t</thead>\r\n\t \t\t\t \t<tbody>\r\n\t\t \t\t\t \t{this.state.posts.map((post) => {\r\n\t\t \t\t\t \t\treturn (\r\n\t\t \t\t\t\t\t\t<tr key={post.id}>\r\n\t\t\t\t\t\t\t\t\t<td className=\"td1\">{post.id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{post.title}</td>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>{post.body}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<Link className=\"detail-btn\" to={{ pathname: `/post/${post.id}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {id: post.id, post: post.body, title: post.title}}}>Details\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t \t\t\t \t\t)})}\r\n\t \t\t\t \t</tbody>\t\t \t\t\t \t\r\n\t \t\t\t</table>\r\n\t \t\t\t<Topost />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Posts","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './delete.css';\r\n\r\n\r\nclass Delete extends Component {\t\r\n\t\r\n\r\n\t//Delete method \r\n\thandleDelete = e => {\r\n\t\te.preventDefault()\r\n\t\taxios.delete(`https://jsonplaceholder.typicode.com/posts/${this.props.id}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\t\t\t\r\n\t\t\t\talert(\"Post with id \" + this.props.id + \" has been delited!\")\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"delete-btn\" onClick={this.handleDelete}>Delete</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Delete","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Delete from '../Delete/delete.js';\r\nimport './Post.css';\r\nimport Header from '../Header/header.js';\r\n\r\n\r\n\r\nclass Posts extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcomments: [],\r\n\t\t\tposts: []\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst id = this.props.location.state.id;\r\n\t    axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`)\r\n\t      .then(res => {\r\n\t           this.setState({\r\n\t            comments: res.data\r\n\t          });\r\n\t        },\r\n\t        (error) => {\r\n\t          console.log(error)\r\n\t        }\r\n\t      )\r\n\t     \r\n\t     \r\n  \t}\t\r\n\r\n\r\n\t\r\n\r\n\trender() {\r\n\t\tconsole.log(this.props.location)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header header=\"Post details\"/>\r\n\t\t\t\t<table className=\"post-table\">\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr key={this.props.location.state.id}>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\tPost title:\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t{this.props.location.state.title}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\tPost body:\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t{this.props.location.state.post}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\t\r\n\t\t\t\t</table>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"btn-row\">\r\n\t\t\t\t\t<Link className=\"edit-btn\" to={{ pathname: `/toedit/${this.props.location.state.id}`,\r\n\t\t\t\t\tstate: {id: this.props.location.state.id, title: this.props.location.state.title, post: this.props.location.state.post}}}>Edit</Link>\r\n\t\t\t\t\t<Delete id={this.props.location.state.id} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h1 className=\"comments-header\">Comments</h1>\r\n\r\n\t\t\t\t<table className=\"post-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t<th>Comment</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t \t\t \t{this.state.comments.map((comment) => {\r\n\t\t\t \t\t \t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={comment.id}>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{comment.email}\r\n\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{comment.body}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\t\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t \t\t\t \t})}\r\n\t\t \t\t\t</tbody>\r\n\t\t \t\t</table>\r\n \t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\r\nexport default Posts","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from '../Header/header.js'\r\nimport './put.css';\r\n\r\n\r\nclass Put extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\ttitle: this.props.location.state.title,\r\n\t\t\tbody: this.props.location.state.post\r\n\t\t}\t\r\n\t}\r\n\t\r\n\r\n\t//PUT method\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\taxios.put(`https://jsonplaceholder.typicode.com/posts/${this.props.location.state.id}`, this.state )\r\n\t\t\t.then(response => {\r\n\t\t\t\talert(\"Post with id \" + this.props.location.state.id +\" has been edited!\")\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\t\thandleChange = (e) => {\r\n\t\tthis.setState({[e.target.name]: e.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { title, body } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header header=\"Edit post\"/>\r\n\t\t\t\t<form className=\"edit-form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h1>Edit post</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"post-id\">Post ID</label>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input disabled id=\"post-id\" type=\"text\" name=\"userId\" value={this.props.location.state.id}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"post-title\">Post title</label>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<textarea id=\"post-title\" type=\"text\" name=\"title\" value={title} onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"post-body\">Post body</label>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<textarea id=\"post-body\" type=\"text\" name=\"body\" value={body} onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"edit-btn\" type=\"submit\">Edit post</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\nexport default Put","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Users.css';\r\nimport Header from '../Header/header.js'\r\n\r\n\r\n\r\nclass Users extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tusers: []\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//Fetching all users from the start\r\n\tcomponentDidMount() {\r\n    axios.get(\"https://cors-anywhere.herokuapp.com/http://jsonplaceholder.typicode.com/users\")\r\n      .then(res => {\r\n            this.setState({\r\n            users: res.data\r\n          });\r\n        },\r\n        (error) => {\r\n           console.log(error)\r\n        }\r\n      )\r\n  \t}\t\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<Header header=\"Users\"/>\r\n\t\t\t <table className=\"user-table\">\r\n\t\t\t \t\t<thead>\r\n\t\t\t\t \t\t<tr>\r\n\t\t\t\t \t\t\t<th>User ID</th>\r\n\t\t\t\t \t\t\t<th>Name</th>\r\n\t\t\t\t \t\t\t<th>Username</th>\t\t \t\t\t\t\t\r\n\t\t\t\t \t\t\t<th>Email</th>\r\n\t\t\t\t \t\t</tr>\r\n\t\t\t \t\t</thead>\t\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t \t{this.state.users.map((user) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={user.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{user.username}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{user.email}</td>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={{ pathname: `/user/${user.id}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  state: {id: user.id}}}>Posts\r\n\t\t\t\t\t\t\t  \t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)})} \r\n\t\t\t\t\t </tbody>\t\r\n  \t\t </table>\r\n  \t\t</div> \r\n\t\t )}}\r\n\r\n\t\r\n\r\n\r\nexport default Users","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Posts from './Posts/Posts.js'\r\nimport Post from './Post/Post.js'\r\nimport Topost from './Create/create.js'\r\nimport Put from './Edit/put.js'\r\nimport Delete from './Delete/delete.js'\r\nimport Users from './Users/Users.js'\r\n\r\n\r\n\r\nconst Router = () => (\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Users} />\r\n      <Route path=\"/user/:id\" component={Posts} />\r\n      <Route path=\"/post/:id\" component={Post} />\r\n      <Route path=\"/topost/\" component={Topost} />     \r\n      <Route path=\"/toedit/\" component={Put} />     \r\n      <Route path=\"/todelete/\" component={Delete} />     \r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Router from \"./components/Router\";\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}